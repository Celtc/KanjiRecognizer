<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="mscorlib" name="mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="label_nCount.AutoSize" type="System.Boolean, mscorlib">
    <value>True</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label_nCount.Location" type="System.Drawing.Point, System.Drawing">
    <value>12, 18</value>
  </data>
  <data name="label_nCount.Size" type="System.Drawing.Size, System.Drawing">
    <value>83, 13</value>
  </data>
  <data name="label_nCount.TabIndex" type="System.Int32, mscorlib">
    <value>0</value>
  </data>
  <data name="label_nCount.Text" xml:space="preserve">
    <value>N° de Neuronas</value>
  </data>
  <data name="&gt;&gt;label_nCount.Name" xml:space="preserve">
    <value>label_nCount</value>
  </data>
  <data name="&gt;&gt;label_nCount.Type" xml:space="preserve">
    <value>System.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="&gt;&gt;label_nCount.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
  <data name="&gt;&gt;label_nCount.ZOrder" xml:space="preserve">
    <value>7</value>
  </data>
  <data name="textBox_nCount.Location" type="System.Drawing.Point, System.Drawing">
    <value>148, 15</value>
  </data>
  <data name="textBox_nCount.Size" type="System.Drawing.Size, System.Drawing">
    <value>117, 20</value>
  </data>
  <data name="textBox_nCount.TabIndex" type="System.Int32, mscorlib">
    <value>1</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="textBox_nCount.TextAlign" type="System.Windows.Forms.HorizontalAlignment, System.Windows.Forms">
    <value>Right</value>
  </data>
  <data name="&gt;&gt;textBox_nCount.Name" xml:space="preserve">
    <value>textBox_nCount</value>
  </data>
  <data name="&gt;&gt;textBox_nCount.Type" xml:space="preserve">
    <value>System.Windows.Forms.TextBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="&gt;&gt;textBox_nCount.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
  <data name="&gt;&gt;textBox_nCount.ZOrder" xml:space="preserve">
    <value>6</value>
  </data>
  <data name="button_cancelFRM.Location" type="System.Drawing.Point, System.Drawing">
    <value>149, 103</value>
  </data>
  <data name="button_cancelFRM.Size" type="System.Drawing.Size, System.Drawing">
    <value>75, 23</value>
  </data>
  <data name="button_cancelFRM.TabIndex" type="System.Int32, mscorlib">
    <value>4</value>
  </data>
  <data name="button_cancelFRM.Text" xml:space="preserve">
    <value>Cancelar</value>
  </data>
  <data name="&gt;&gt;button_cancelFRM.Name" xml:space="preserve">
    <value>button_cancelFRM</value>
  </data>
  <data name="&gt;&gt;button_cancelFRM.Type" xml:space="preserve">
    <value>System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="&gt;&gt;button_cancelFRM.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
  <data name="&gt;&gt;button_cancelFRM.ZOrder" xml:space="preserve">
    <value>5</value>
  </data>
  <data name="button_createNN.ImeMode" type="System.Windows.Forms.ImeMode, System.Windows.Forms">
    <value>NoControl</value>
  </data>
  <data name="button_createNN.Location" type="System.Drawing.Point, System.Drawing">
    <value>67, 103</value>
  </data>
  <data name="button_createNN.Size" type="System.Drawing.Size, System.Drawing">
    <value>75, 23</value>
  </data>
  <data name="button_createNN.TabIndex" type="System.Int32, mscorlib">
    <value>3</value>
  </data>
  <data name="button_createNN.Text" xml:space="preserve">
    <value>Crear</value>
  </data>
  <data name="&gt;&gt;button_createNN.Name" xml:space="preserve">
    <value>button_createNN</value>
  </data>
  <data name="&gt;&gt;button_createNN.Type" xml:space="preserve">
    <value>System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="&gt;&gt;button_createNN.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
  <data name="&gt;&gt;button_createNN.ZOrder" xml:space="preserve">
    <value>4</value>
  </data>
  <metadata name="errorProvider_frmCreateNN.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.Localizable" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="$this.AutoScaleDimensions" type="System.Drawing.SizeF, System.Drawing">
    <value>6, 13</value>
  </data>
  <data name="$this.ClientSize" type="System.Drawing.Size, System.Drawing">
    <value>294, 136</value>
  </data>
  <data name="label_updSequence.AutoSize" type="System.Boolean, mscorlib">
    <value>True</value>
  </data>
  <data name="label_updSequence.Font" type="System.Drawing.Font, System.Drawing">
    <value>Microsoft Sans Serif, 8.25pt, style=Underline</value>
  </data>
  <data name="label_updSequence.ImeMode" type="System.Windows.Forms.ImeMode, System.Windows.Forms">
    <value>NoControl</value>
  </data>
  <data name="label_updSequence.Location" type="System.Drawing.Point, System.Drawing">
    <value>12, 73</value>
  </data>
  <data name="label_updSequence.Size" type="System.Drawing.Size, System.Drawing">
    <value>130, 13</value>
  </data>
  <data name="label_updSequence.TabIndex" type="System.Int32, mscorlib">
    <value>10</value>
  </data>
  <data name="label_updSequence.Text" xml:space="preserve">
    <value>Secuencia de actualizado</value>
  </data>
  <metadata name="toolTip_updSequence.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>364, 17</value>
  </metadata>
  <data name="label_updSequence.ToolTip" xml:space="preserve">
    <value>Synchronous: Todas las neuronas actualizan simultaneamente sus estados basandose en el 
estado global actual de la red. Esto se repite en n iteraciones o etapas hasta que se 
logra estabilizar la red. De esta forma los cambios de estado no se ven influenciados 
por cambios anteriores en otras neuronas dentro de una misma iteración.

PseudoRandom: Al igual que el actualizado synchronous se realiza en etapas, evaluando 
todas las neuronas en cada una de las etapas. Sin embargo dentro de una misma etapa las 
actualizaciones consecutivas se ven influciadas por actualizaciones previas realizadas 
en la misma etapa a otras neuronas. El orden en que se actualizan es generado de manera 
random.</value>
  </data>
  <metadata name="toolTip_gMethod.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>218, 17</value>
  </metadata>
  <data name="label_updSequence.ToolTip1" xml:space="preserve">
    <value>Synchronous: Todas las neuronas actualizan simultaneamente sus estados basandose en el 
estado global actual de la red. Esto se repite en n iteraciones o etapas hasta que se 
logra estabilizar la red. De esta forma los cambios de estado no se ven influenciados 
por cambios anteriores en otras neuronas dentro de una misma iteración.

PseudoRandom: Al igual que el actualizado synchronous se realiza en etapas, evaluando 
todas las neuronas en cada una de las etapas. Sin embargo dentro de una misma etapa las 
actualizaciones consecutivas se ven influciadas por actualizaciones previas realizadas 
en la misma etapa a otras neuronas. El orden en que se actualizan es generado de manera 
random.</value>
  </data>
  <data name="&gt;&gt;label_updSequence.Name" xml:space="preserve">
    <value>label_updSequence</value>
  </data>
  <data name="&gt;&gt;label_updSequence.Type" xml:space="preserve">
    <value>System.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="&gt;&gt;label_updSequence.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
  <data name="&gt;&gt;label_updSequence.ZOrder" xml:space="preserve">
    <value>0</value>
  </data>
  <data name="comboBox_updSequence.Location" type="System.Drawing.Point, System.Drawing">
    <value>148, 70</value>
  </data>
  <data name="comboBox_updSequence.Size" type="System.Drawing.Size, System.Drawing">
    <value>117, 21</value>
  </data>
  <data name="comboBox_updSequence.TabIndex" type="System.Int32, mscorlib">
    <value>9</value>
  </data>
  <data name="&gt;&gt;comboBox_updSequence.Name" xml:space="preserve">
    <value>comboBox_updSequence</value>
  </data>
  <data name="&gt;&gt;comboBox_updSequence.Type" xml:space="preserve">
    <value>System.Windows.Forms.ComboBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="&gt;&gt;comboBox_updSequence.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
  <data name="&gt;&gt;comboBox_updSequence.ZOrder" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="label_gMethod.AutoSize" type="System.Boolean, mscorlib">
    <value>True</value>
  </data>
  <data name="label_gMethod.Font" type="System.Drawing.Font, System.Drawing">
    <value>Microsoft Sans Serif, 8.25pt, style=Underline</value>
  </data>
  <data name="label_gMethod.Location" type="System.Drawing.Point, System.Drawing">
    <value>12, 44</value>
  </data>
  <data name="label_gMethod.Size" type="System.Drawing.Size, System.Drawing">
    <value>112, 13</value>
  </data>
  <data name="label_gMethod.TabIndex" type="System.Int32, mscorlib">
    <value>8</value>
  </data>
  <data name="label_gMethod.Text" xml:space="preserve">
    <value>Generación del patrón</value>
  </data>
  <data name="label_gMethod.ToolTip" xml:space="preserve">
    <value>Normal: El patrón sera generado a partir del contenido de la imagen, una vez escalada para
que coincida en cantidad de pixeles a la cantidad de neuronas.

Hashing: Este método aumentará la cantidad de patrones reconocibles al aprender códigos
hash generados a partir de la imagen, incrementando la ortogonalidad de los patrones. Pero
el reconocimiento se limitará a imágenes exactamente iguales a las aprendidas.</value>
  </data>
  <data name="&gt;&gt;label_gMethod.Name" xml:space="preserve">
    <value>label_gMethod</value>
  </data>
  <data name="&gt;&gt;label_gMethod.Type" xml:space="preserve">
    <value>System.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="&gt;&gt;label_gMethod.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
  <data name="&gt;&gt;label_gMethod.ZOrder" xml:space="preserve">
    <value>2</value>
  </data>
  <data name="comboBox_gMethod.Location" type="System.Drawing.Point, System.Drawing">
    <value>148, 41</value>
  </data>
  <data name="comboBox_gMethod.Size" type="System.Drawing.Size, System.Drawing">
    <value>117, 21</value>
  </data>
  <data name="comboBox_gMethod.TabIndex" type="System.Int32, mscorlib">
    <value>2</value>
  </data>
  <data name="&gt;&gt;comboBox_gMethod.Name" xml:space="preserve">
    <value>comboBox_gMethod</value>
  </data>
  <data name="&gt;&gt;comboBox_gMethod.Type" xml:space="preserve">
    <value>System.Windows.Forms.ComboBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="&gt;&gt;comboBox_gMethod.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
  <data name="&gt;&gt;comboBox_gMethod.ZOrder" xml:space="preserve">
    <value>3</value>
  </data>
  <data name="$this.StartPosition" type="System.Windows.Forms.FormStartPosition, System.Windows.Forms">
    <value>CenterScreen</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>Crear Red Neuronal (Hopfield)</value>
  </data>
  <data name="&gt;&gt;errorProvider_frmCreateNN.Name" xml:space="preserve">
    <value>errorProvider_frmCreateNN</value>
  </data>
  <data name="&gt;&gt;errorProvider_frmCreateNN.Type" xml:space="preserve">
    <value>System.Windows.Forms.ErrorProvider, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="&gt;&gt;toolTip_gMethod.Name" xml:space="preserve">
    <value>toolTip_gMethod</value>
  </data>
  <data name="&gt;&gt;toolTip_gMethod.Type" xml:space="preserve">
    <value>System.Windows.Forms.ToolTip, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="&gt;&gt;toolTip_updSequence.Name" xml:space="preserve">
    <value>toolTip_updSequence</value>
  </data>
  <data name="&gt;&gt;toolTip_updSequence.Type" xml:space="preserve">
    <value>System.Windows.Forms.ToolTip, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="&gt;&gt;$this.Name" xml:space="preserve">
    <value>frmCreanteNN</value>
  </data>
  <data name="&gt;&gt;$this.Type" xml:space="preserve">
    <value>System.Windows.Forms.Form, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
</root>